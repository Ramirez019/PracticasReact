{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cristian.ramirez\\\\source\\\\repos practicas\\\\PracticasReact\\\\src\\\\Components\\\\Forms.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Forms = () => {\n  _s();\n\n  const [name, setName] = useState(false);\n  const [firstName, setFirstName] = useState(false);\n  const [email, setEmail] = useState(false);\n  const [password, setPassword] = useState(false);\n  const nameRegex = /^[a-zA-Z]{3,16}$/;\n  const emailRegex = /^[a-zA-Z0-9\\._-]+@[a-zA-Z0-9-]{2,30}[.][a-zA-Z]{2,4}$/;\n  const fistNameRegex = /^[a-zA-z]{3,16}$/;\n  const passwordRegex = /^[a-z0-9_-]{6,18}$/;\n\n  const ValueName = nameValid => {\n    if (nameValid.trim()) {\n      if (nameRegex.test(nameValid)) {\n        setName(true);\n      }\n    }\n  };\n\n  const ValueFirsName = firstnameValid => {\n    if (firstnameValid.trim()) {\n      if (nameRegex.test(firstnameValid)) {\n        setFirstName(true);\n      }\n    }\n  };\n\n  const ValueEmail = emailValid => {\n    if (emailValid.trim()) {\n      if (nameRegex.test(emailValid)) {\n        setEmail(true);\n      }\n    }\n  };\n\n  const ValuePassword = passwordValid => {\n    if (passwordValid.trim()) {\n      if (nameRegex.test(passwordValid)) {\n        setPassword(true);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Nombre:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => ValueName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Apellido:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => ValueFirsName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        onChange: e => ValueEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        onChange: e => ValuePassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Forms, \"seWCwfGb0+U+56UIlnQ7Nuzb/es=\");\n\n_c = Forms;\nexport default Forms;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forms\");","map":{"version":3,"sources":["C:/Users/cristian.ramirez/source/repos practicas/PracticasReact/src/Components/Forms.jsx"],"names":["React","useState","Forms","name","setName","firstName","setFirstName","email","setEmail","password","setPassword","nameRegex","emailRegex","fistNameRegex","passwordRegex","ValueName","nameValid","trim","test","ValueFirsName","firstnameValid","ValueEmail","emailValid","ValuePassword","passwordValid","e","target","value"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\n\r\nconst Forms = () => {\r\n\r\n    const[name,setName]= useState(false)\r\n    const[firstName,setFirstName]= useState(false)\r\n    const[email,setEmail]= useState(false)\r\n    const[password,setPassword]= useState(false)\r\n\r\n    const nameRegex = /^[a-zA-Z]{3,16}$/\r\n    const emailRegex = /^[a-zA-Z0-9\\._-]+@[a-zA-Z0-9-]{2,30}[.][a-zA-Z]{2,4}$/\r\n    const fistNameRegex = /^[a-zA-z]{3,16}$/\r\n    const passwordRegex = /^[a-z0-9_-]{6,18}$/\r\n\r\n    const ValueName=(nameValid)=>{\r\n        if(nameValid.trim()){\r\n            if(nameRegex.test(nameValid))\r\n            {\r\n                setName(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    const ValueFirsName=(firstnameValid)=>{\r\n        if(firstnameValid.trim()){\r\n            if(nameRegex.test(firstnameValid))\r\n            {\r\n                setFirstName(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    const ValueEmail=(emailValid)=>{\r\n        if(emailValid.trim()){\r\n            if(nameRegex.test(emailValid))\r\n            {\r\n                setEmail(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    const ValuePassword=(passwordValid)=>{\r\n        if(passwordValid.trim()){\r\n            if(nameRegex.test(passwordValid))\r\n            {\r\n                setPassword(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form>\r\n                <h3>Nombre:</h3>\r\n                <input type=\"text\" onChange={e=>ValueName(e.target.value)} />\r\n                <h3>Apellido:</h3>\r\n                <input type=\"text\" onChange={e=>ValueFirsName(e.target.value)} />\r\n                <h3>Email:</h3>\r\n                <input type=\"email\" onChange={e=>ValueEmail(e.target.value)} />\r\n                <h3>Password:</h3>\r\n                <input type=\"password\" onChange={e=>ValuePassword(e.target.value)} />\r\n                <br />\r\n                <input type=\"submit\" />\r\n            </form> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Forms\r\n"]},"metadata":{},"sourceType":"module"}